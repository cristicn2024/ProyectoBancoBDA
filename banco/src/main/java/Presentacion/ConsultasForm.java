/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import Persistencia.Conexion.ConexionBD;
import Persistencia.Conexion.IConexionBD;
import Persistencia.DAOS.ClienteDAO;
import Persistencia.DAOS.IClienteDAO;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * Interfaz Grafica del historial
 * @author crist
 */
public class ConsultasForm extends javax.swing.JFrame {

     JTable TablaMovimientos;
    IConexionBD conexionBD;
    int idCliente;
    private static final Logger LOG = Logger.getLogger(ClienteDAO.class.getName());
    String cadenaConexion = "jdbc:mysql://localhost:3306/ProyectoBanco";
    String usuario = "root";
    String contra = "78357Cas";
    IClienteDAO clienteDAO;

    /**
     * Creates new form HistorialForm
     * @param idCliente
     */
    public ConsultasForm(int idCliente) {
        this.idCliente = idCliente;
        conexionBD = new ConexionBD(cadenaConexion, usuario, contra);
        clienteDAO = new ClienteDAO(conexionBD);

        initComponents();
        this.idCliente = idCliente;
        TablaMovimientos = new JTable();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("FECHA Y HORA");
        modelo.addColumn("Monto");
        modelo.addColumn("TIPO");
        TablaMovimientos.setModel(modelo);

        // Agregar la tabla a un JScrollPane para que sea desplazable
        JScrollPane scrollPane = new JScrollPane(TablaMovimientos);
        scrollPane.setBounds(10, 50, 580, 400); // Ajusta las coordenadas y dimensiones según tu diseño
        add(scrollPane);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        porFechaBoton = new javax.swing.JButton();
        porTipoBoton = new javax.swing.JButton();
        cancelarBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Historial de transacciones");

        porFechaBoton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        porFechaBoton.setText("POR FECHA");
        porFechaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porFechaBotonActionPerformed(evt);
            }
        });

        porTipoBoton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        porTipoBoton.setText("POR TIPO");
        porTipoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porTipoBotonActionPerformed(evt);
            }
        });

        cancelarBoton.setText("Cancelar");
        cancelarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addContainerGap(449, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porTipoBoton)
                    .addComponent(porFechaBoton))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(porFechaBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(porTipoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addComponent(cancelarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void porFechaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porFechaBotonActionPerformed
        // TODO add your handling code here:
        String inputFecha = JOptionPane.showInputDialog(this, "Ingrese la fecha (YYYY-MM-DD):", "Consultar Movimientos por Fecha", JOptionPane.QUESTION_MESSAGE);

        if (inputFecha != null && !inputFecha.isEmpty()) {
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                java.util.Date fecha = dateFormat.parse(inputFecha);

                List<Object[]> movimientos = clienteDAO.movimientosPorFecha(idCliente, new Date(fecha.getTime()));
                DefaultTableModel modelo = (DefaultTableModel) TablaMovimientos.getModel();
                modelo.setRowCount(0);

                for (Object[] movimiento : movimientos) {
                    modelo.addRow(movimiento);
                }

                if (movimientos.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No se encontraron movimientos para la fecha especificada.", "Sin Resultados", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Por favor, ingrese la fecha en el formato YYYY-MM-DD.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar una fecha para realizar la consulta.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_porFechaBotonActionPerformed

    private void porTipoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porTipoBotonActionPerformed
        // TODO add your handling code here:
        String tipo = JOptionPane.showInputDialog(this, "Ingrese el tipo de movimiento:", "Consultar Movimientos por Tipo", JOptionPane.QUESTION_MESSAGE);

        if (tipo != null && !tipo.isEmpty()) {
            List<Object[]> movimientos = clienteDAO.movimientosPorTipo(idCliente, tipo);
            DefaultTableModel modelo = (DefaultTableModel) TablaMovimientos.getModel();
            modelo.setRowCount(0);

            for (Object[] movimiento : movimientos) {
                modelo.addRow(movimiento);
            }

            if (movimientos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontraron movimientos para el tipo especificado.", "Sin Resultados", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un tipo de movimiento para realizar la consulta.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_porTipoBotonActionPerformed

    private void cancelarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBotonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_cancelarBotonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton porFechaBoton;
    private javax.swing.JButton porTipoBoton;
    // End of variables declaration//GEN-END:variables
}
